# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
    build:
        machine:
        # docker:
        #   # specify the version you desire here
        #   # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
        #   - image: buildpack-deps:xenial
            image: circleci/classic:edge

        # Specify service dependencies here if necessary
        # CircleCI maintains a library of pre-built images
        # documented at https://circleci.com/docs/2.0/circleci-images/
        # - image: circleci/postgres:9.4

        working_directory: ~/projects/outwiker

        steps:
            - checkout

              # Download and cache dependencies
              # - restore_cache:
              #     keys:
              #     - v1-dependencies-{{ checksum "requirements.txt" }}
              #     # fallback to using the latest cache if no exact match is found
              #     - v1-dependencies-

            - run:
                name: install dependencies
                command: |
                    sudo apt-add-repository -y ppa:jonathonf/python-3.6
                    sudo apt-get -y update
                    sudo apt-get -y install python python2.7 python3.6 python3.6-dev
                    sudo apt-get -y install debhelper devscripts debhelper devscripts p7zip-full libssl-dev dpkg-dev build-essential libjpeg-dev libtiff-dev libsdl1.2-dev libnotify-dev freeglut3 ibus-gtk3 xvfb
                    sudo apt-get -y install libwebkitgtk-3.0
                    # sudo apt-get -y install libwebkit2gtk-4.0
                    wget https://bootstrap.pypa.io/get-pip.py
                    python3.6 get-pip.py --user
                    python3.6 -m pip install --user pipenv
                    python3.6 -m pipenv run pip install -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-14.04 wxPython==4.0.2
                    python3.6 -m pipenv update --dev

                    # - save_cache:
                    #     paths:
                    #       - ./venv
                    #     key: v1-dependencies-{{ checksum "requirements.txt" }}

                    # run tests!
                    # this example uses Django's built-in test-runner
                    # other common Python testing frameworks include pytest and nose
                    # https://pytest.org
                    # https://nose.readthedocs.io
            - run:
                name: run tests
                command: |
                    python3.6 -m pipenv run fab test

            - store_artifacts:
                path: test-reports
                destination: test-reports
