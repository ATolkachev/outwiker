.. _fabfile:

Выполнение команд Fabric
========================

.. contents:: Содержание
   :depth: 2


Сборка под Windows
------------------

win
    Сборка OutWiker под Windows с помощью cx_Freeze_, а также инсталятор с помощью `Inno Setup`_. Результат помещается в папку :file:`/build`. Задача для сборки `win` может принимать два булевых параметра: если первый параметр равен 1, то не создается инсталятор; если второй параметр равен 1, то не создаются архивы со скомпилированной программой.

win_clear
    Удалить все, что создается с помощью команды `win`.

Сборка под Linux
----------------

deb

deb_binary
    Создать deb-пакеты на основе бинарной сборки под Linux для всех поддерживаемых версий Ubuntu.

deb_binary_clear
    Удалить все, что создается с помощью команды `deb_binary`

deb_sources_included
    Создать deb-пакеты на основе исходных кодов для всех поддерживаемых версий Ubuntu. Используется для закачки на PPA.

deb_install
    Создать и установить deb-пакет (на основе исходных кодов) в систему.

deb_single
    Создать deb-пакет под ту версию Ubuntu, в которой происходит сборка.

deb_clear
    Удалить все deb-пакеты.

linux
    Создать бинарную сборку под Linux с помощью cx_Freeze_.

linux_clear
    Удалить созданную бинарную сборку под Linux.


Команды, связанные с плагинами
------------------------------

plugins
    Создать архивы с плагинами (отдельный архив на каждый плагин и общий архив со всеми плагинами). Эта команда может принимать булево значение. Если оно равно 1, то создаются архивы только для тех плагинов, которые имеют более новые версии по сравнению с теми, что выложены на сайте программы. Общий архив с плагинами создается в любом случае.

plugins_clear
    Удалить все архивы с плагинами.


Команды, помогающие при разработке
----------------------------------

run
    Запустить OutWiker из исходников.

apiversion или apiversions
    Вывести номера версий встроенных пакетов outwiker (см. раздел :ref:`ru_sources_struct_src`).

test
    Запустить юнит-тесты.

test_build
    Запустить юнит-тесты, связанные со сборкой.


Команды, связанные с локализацией
---------------------------------

locale
    Создать файл src/locale/outwiker.pot, используемый для создания файлов локализации.

locale_plugin или plugin_locale
    Создать файл локализации \*.pot для плагина, указанного в качестве параметра команды.


Команды, связанные с развертыванием
-----------------------------------

deploy_unstable
    Закачать собранную нестабильную версию под Windows, а также собрать deb-пакеты и закачать их на PPA.

outwiker_changelog
    Вывести список изменений, который нужно будет вставить на сайт. В качестве параметра требуется указать язык: ru или en.

plugin_changelog
    Вывести список изменений для плагина. В качестве параметров требуется указать имя плагина и язык: ru или en.

site_versions
    Вывести номера версий OutWiker и всех плагинов. Показываются версии, закачанные на сайт и находящиеся в папке с исходиками.

upload_plugin
    Закачать плагин или плагины на сайт. Для плагинов требуется предварительно создать архивы с плагинами с помощью команды `plugins`.

upload_plugins_pack
    Закачать архив со всеми плагинами на сайт. Архив с плагинами требуется предварительно создать с помощью команды `plugins`.

upload_unstable
    Закачать нестабильную версию OutWiker на сайт.

plugins_list
    Создать таблицу со списком плагинов для сайта. Требуется указать язык: ru или en.


Другие команды
-----------------------

clear
    Удалить все, что создано в папке build

create_tree
    Создать тестовое дерево заметок для тестов.

doc
    Скомпилировать данную документацию.

prepare_virtual
    Подготовить виртуальную машину с Linux, чтобы в ней можно было бы запустить OutWiker из исходников.

sources
    Создать архив с исходниками.

sources_clear
    Удалить архив с исходниками.


.. _cx_Freeze: https://anthony-tuininga.github.io/cx_Freeze/
.. _`Inno Setup`: http://www.jrsoftware.org
