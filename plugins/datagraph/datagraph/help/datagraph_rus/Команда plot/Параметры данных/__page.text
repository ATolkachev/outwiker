!!! Оглавление раздела



!!! [[#data]] Установка источника данных

Данные могут браться из двух источников. По умолчанию данные берутся из тела команды (то, что находится между [=(:plot:)=] и [=(:plotend:)=]). Однако, данные могут также читаться из прикрепленных файлов, для этого используется параметр [[''curve.data'' -> page://__0e8277e9-e11f-46fd-a5b2-b67194cddd47/#data]]. 

[@(:plot
curve.data="Attach:example_5.txt"
curve.ycol=2

curve2.data="Attach:example_5.txt"
curve2.ycol=3
:)
(:plotend:)@]


(:plot
curve.data="Attach:example_5.txt"
curve.ycol=2

curve2.data="Attach:example_5.txt"
curve2.ycol=3
:)
(:plotend:)

Для разных кривых данные могут браться из разных источников - или из разных прикрепленных файлов, или для одних кривых данные могут браться из тела команды, для других читаться из файла.

Дальнейшие параметры данных устанавливаются индивидуально для каждой [[кривой -> page://__0e8277e9-e11f-46fd-a5b2-b67194cddd47]], т.е. используется запись вида ''curve.data.имя_параметра''.

----


!!! [[#colsep]] Параметр ''curve.data.colsep''

По умолчанию элементы каждой строки данных разделяются между собой любым количеством пробелов или символов табуляции. Вы можете изменить это поведение, задав другой разделитель с помощью параметра ''curve.data.colsep''. Этот параметр принимает [[регулярное выражение -> https://docs.python.org/2/library/re.html]]. Значение по умолчанию этого параметра "\s+".

Следующий пример показывает, как сделать, чтобы элементы строки разделялись с помощью запятых и, возможно, пробелов.

[@(:plot
curve.data.colsep=",\s*"
:)
1, 10, 20, 30, 40
2, 11, 22, 31, 41
3, 13, 24, 33, 42
4, 15, 25, 35, 43
5, 16, 26, 36, 44
6, 18, 27, 37, 45
7, 20, 30, 38, 46
8, 20, 30, 38, 46
9, 20, 30, 38, 46
10, 20, 30, 38, 46
(:plotend:)@]


(:plot
curve.data.colsep=",\s*"
:)
1, 10, 20, 30, 40
2, 11, 22, 31, 41
3, 13, 24, 33, 42
4, 15, 25, 35, 43
5, 16, 26, 36, 44
6, 18, 27, 37, 45
7, 20, 30, 38, 46
8, 20, 30, 38, 46
9, 20, 30, 38, 46
10, 20, 30, 38, 46
(:plotend:)

----

Учытывая особенность чтения данных, что пробелы всегда отбрасываются, предыдущий пример можно было бы сделать проще:

[@(:plot
curve.data.colsep=","
:)
1, 10, 20, 30, 40
2, 11, 22, 31, 41
3, 13, 24, 33, 42
4, 15, 25, 35, 43
5, 16, 26, 36, 44
6, 18, 27, 37, 45
7, 20, 30, 38, 46
8, 20, 30, 38, 46
9, 20, 30, 38, 46
10, 20, 30, 38, 46
(:plotend:)@]


(:plot
curve.data.colsep=","
:)
1, 10, 20, 30, 40
2, 11, 22, 31, 41
3, 13, 24, 33, 42
4, 15, 25, 35, 43
5, 16, 26, 36, 44
6, 18, 27, 37, 45
7, 20, 30, 38, 46
8, 20, 30, 38, 46
9, 20, 30, 38, 46
10, 20, 30, 38, 46
(:plotend:)

----


!!! [[#skiprows]] Параметр ''curve.data.skiprows''

Иногда в начале файла с текстовыми данными пишут заголовок, который может описывать представленные данные. Для корректной работы плагина DataGraph либо нужно удалить эти строки, либо воспользоваться параметром ''curve.data.skiprows'', который указывает, сколько строк нужно проигнорировать при чтении данных. Этот параметр работает как для данных, загружаемых из файла, так и для данных из тела команды [=(:plot:)=].

[@(:plot
curve.data.skiprows = 3
:)
Этот текст
не нужен для
построения графиков
1    10    20    30    40
2    11    22    31    41
3    13    24    33    42
4    15    25    35    43
5    16    26    36    44
6    18    27    37    45
7    20    30    38    46
8    20    30    38    46
9    20    30    38    46
10   20    30    38    46
(:plotend:)@]


(:plot
curve.data.skiprows = 3
:)
Этот текст
не нужен для
построения графиков
1    10    20    30    40
2    11    22    31    41
3    13    24    33    42
4    15    25    35    43
5    16    26    36    44
6    18    27    37    45
7    20    30    38    46
8    20    30    38    46
9    20    30    38    46
10   20    30    38    46
(:plotend:)

----

Также этот параметр можно использовать для того, чтобы некоторые начальные значения на графике.

 [@(:plot
curve.data.skiprows = 3
:)
1    10    20    30    40
2    11    22    31    41
3    13    24    33    42
4    15    25    35    43
5    16    26    36    44
6    18    27    37    45
7    20    30    38    46
8    20    30    38    46
9    20    30    38    46
10   20    30    38    46
(:plotend:)@]

(:plot
curve.data.skiprows = 3
:)
1    10    20    30    40
2    11    22    31    41
3    13    24    33    42
4    15    25    35    43
5    16    26    36    44
6    18    27    37    45
7    20    30    38    46
8    20    30    38    46
9    20    30    38    46
10   20    30    38    46
(:plotend:)


!!! [[#formatcol]] Параметр ''curve.data.formatcol''


